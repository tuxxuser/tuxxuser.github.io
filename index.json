[{"content":"This guide provides basic steps, on how to create a virtual machine for Windows 11 in Proxmox.\nMicrosoft Windows 11 hardware requirements To install or upgrade to Windows 11, devices must meet the following minimum hardware requirements:\nComponent Description Processor 1 GHz or faster with 2 and more cores, 64-bit Memory 4 GB or greater Storage 64 GB or more Graphics card Compatible with DirectX or later, with WDDM 2.0 driver System firmware UEFI, Secure Boot capable TPM Trusted Platform Module (TPM) version 2.0 Display High definition (720p) display, 9\u0026quot; or greater, 8 bits per color channel Internet connection Used to perform updates, and to download and use some features Creating virtual machine Start VM creation wizard Log on to the Proxmox server, select node (e.g. proxmox) and press Create VM. Alternatively, you can right-click on the Proxmox node and select Create VM\nGeneral On the General tab, select and provide the following information:\nSetting name Description Node Select proxmox node where VM is created (e.g. proxmox) VM ID Value is populated automatically and can be changed Name Provide VM name, e.g. Win11-x64-enUS Resource Pool Select resource pool, available on your proxmox (e.g. Production) OS Select Use CD/DVD disc image file (iso) Setting name Description Storage This is name of the repository, where installation ISO images are stored ISO image Name of the ISO image Under Guest OS set the following settings: Setting name Description Type Select OS type - Microsoft Windows Version Select OS version - 11/2022/2025 Activate the option Add additional drive for VirtIO drivers. This option will add a drive for VirtIO drivers. Setting name Description Storage This is name of the repository, where VirtIO driver ISO is located ISO image VirtIO driver ISO name VirtIO driver ISO can be downloaded:\nStable Latest Disks Select Disk and use the following settings:\nSetting name Description Bus/Device Select storage device - in this example VirtIO Block Storage Location where virtual storage device is created Disk size (GB) Virtual disk size. For Windows 11, we can set minimum size of 64 GB CPU Under CPU tab select CPU Type and the amount of CPU Cores.\nIn this example, we set CPU Type = host and number of CPU Cores = 4\nMemory Set the amount of memory (RAM) for the guest OS. For Windows, we set 8 GB (8192 MB).\nNetwork Under the Network tab Bridge, select the network adapter and also select Model (in this example VirtIO (paravirtualized))\nConfirm Finally, confirm (press Finish) all settings to create a virtual machine.\nReferences Microsoft Windows 11 requirements Windows VirtIO Drivers ","permalink":"https://tuxxuser.github.io/posts/2024/proxmox-create-win11vm-20240831-1942/","summary":"This guide provides basic steps, on how to create a virtual machine for Windows 11 in Proxmox.\nMicrosoft Windows 11 hardware requirements To install or upgrade to Windows 11, devices must meet the following minimum hardware requirements:\nComponent Description Processor 1 GHz or faster with 2 and more cores, 64-bit Memory 4 GB or greater Storage 64 GB or more Graphics card Compatible with DirectX or later, with WDDM 2.0 driver System firmware UEFI, Secure Boot capable TPM Trusted Platform Module (TPM) version 2.","title":"Create Windows 11 Virtual Machine in Proxmox"},{"content":"Core utilities (often called \u0026ldquo;coreutils\u0026rdquo;) are the basic, fundamental command-line tools of a GNU/Linux system. These utilities provide basic file, shell, and text manipulation operations. The core utilities are part of the GNU Project and are used in most Linux distributions.\nList of GNU Core Utilities commands Following is a list of commands from the GNU Core Utilities for Unix (and Unix-like) operating systems.\nFile Utilities Name Description chcon Changes (SELinux) file security context chgrp Change group ownership chown Change file owner and group chmod Change (file) access permissions cp Copy files and directories dd Convert and copy a file df Report file system space usage dir Briefly list directory contents (equivalent to ls -C -b) dircolors Color setup for ls install Copy files and set attributes ln Make links between files ls List directory contents mkdir Make directories mkfifo Make FIFOs (named pipes) mknod Make block or character special files mktemp Create temporary file or directory mv Move (rename) files realpath Print the resolved file name rm Remove files or directories rmdir Remove empty directories shred Remove files more securely sync Flushes file system buffers touch Change file timestamps truncate Shrink or extend the size of a file vdir Verbosely list directory contents (equivalent to ls -C -b) Text Utilities Name Description b2sum Print or check BLAKE2 digests base32 Encodes or decodes Base32, and prints result to stdout base64 Encodes or decodes Base64, and prints result to stdout cat Concatenate and write files cksum Print and verify file checksums comm Compare two sorted files line by line csplit Split a file into context-determined pieces\tp cut Print selected parts of lines expand Convert tabs to spaces fmt Reformat paragraph text fold Wrap input lines to fit in specified width head Output the first part of files join Join lines on a common field md5sum Print or check MD5 digests nl Number lines and write files numfmt Reformat numbers od Write files in octal or other formats paste Merge lines of files ptx Produces a permuted index of file contents pr Paginate or columnate files for printing sha1sum Print or check SHA-1 digests (length = 160 bits) sha224sum Print or check SHA-2 digests (length = 224 bits) sha256sum Print or check SHA-2 digests (length = 256 bits) sha384sum Print or check SHA-2 digests (length = 384 bits) sha512sum Print or check SHA-2 digests (length = 512 bits) shuf Shuffling text sort Sort text files split Split a file into pieces sum Print checksum and block counts tac Concatenate and write files in reverse tail Output the last part of files tr Translate, squeeze, and/or delete characters tsort Topological sort unexpand Convert spaces to tabs uniq Uniquify files wc Print newline, word, and byte counts Shell Utilities Name Description arch Print machine hardware name basename Strip directory and suffix from a file name chroot Run a command with a different root directory date Print or set system date and time dirname Strip last file name component du Estimate file space usage echo Print a line of text env Run a command in a modified environment expr Evaluate expressions factor Print prime factors false Do nothing, unsuccessfully groups Print group names a user is in hostid Print numeric host identifier id Print user identity link Make a hard link via the link syscall logname Print current login name nice Run a command with modified niceness nohup Run a command immune to hangups nproc Print the number of available processors pathchk Check file name validity and portability pinky Print information about users printenv Print all or some environment variables printf Format and print data pwd Print working directory readlink Print value of a symlink or canonical file name runcon Run a command in specified SELinux context seq Print numeric sequences sleep Delay for a specified time stat Report file or file system status stdbuf Run a command with modified I/O stream buffering stty Print or change terminal characteristics tee Redirect output to multiple files or processes test Check file types and compare values timeout Run a command with a time limit true Do nothing, successfully tty Print file name of terminal on standard input uname Print system information unlink Remove files via the unlink syscall uptime Print system uptime and load users Print login names of users currently logged in who Print who is currently logged in whoami Print effective user name yes Print a string until interrupted [ Check file types and compare values References GNU Coreutils GNU Coreutils Index GNU Project Homepage Wikipedia: List Of GNU Core Utilities Commands Vikipedia: Coreutils ","permalink":"https://tuxxuser.github.io/posts/2024/gnu-coreutils-20240829-1531/","summary":"Core utilities (often called \u0026ldquo;coreutils\u0026rdquo;) are the basic, fundamental command-line tools of a GNU/Linux system. These utilities provide basic file, shell, and text manipulation operations. The core utilities are part of the GNU Project and are used in most Linux distributions.\nList of GNU Core Utilities commands Following is a list of commands from the GNU Core Utilities for Unix (and Unix-like) operating systems.\nFile Utilities Name Description chcon Changes (SELinux) file security context chgrp Change group ownership chown Change file owner and group chmod Change (file) access permissions cp Copy files and directories dd Convert and copy a file df Report file system space usage dir Briefly list directory contents (equivalent to ls -C -b) dircolors Color setup for ls install Copy files and set attributes ln Make links between files ls List directory contents mkdir Make directories mkfifo Make FIFOs (named pipes) mknod Make block or character special files mktemp Create temporary file or directory mv Move (rename) files realpath Print the resolved file name rm Remove files or directories rmdir Remove empty directories shred Remove files more securely sync Flushes file system buffers touch Change file timestamps truncate Shrink or extend the size of a file vdir Verbosely list directory contents (equivalent to ls -C -b) Text Utilities Name Description b2sum Print or check BLAKE2 digests base32 Encodes or decodes Base32, and prints result to stdout base64 Encodes or decodes Base64, and prints result to stdout cat Concatenate and write files cksum Print and verify file checksums comm Compare two sorted files line by line csplit Split a file into context-determined pieces\tp cut Print selected parts of lines expand Convert tabs to spaces fmt Reformat paragraph text fold Wrap input lines to fit in specified width head Output the first part of files join Join lines on a common field md5sum Print or check MD5 digests nl Number lines and write files numfmt Reformat numbers od Write files in octal or other formats paste Merge lines of files ptx Produces a permuted index of file contents pr Paginate or columnate files for printing sha1sum Print or check SHA-1 digests (length = 160 bits) sha224sum Print or check SHA-2 digests (length = 224 bits) sha256sum Print or check SHA-2 digests (length = 256 bits) sha384sum Print or check SHA-2 digests (length = 384 bits) sha512sum Print or check SHA-2 digests (length = 512 bits) shuf Shuffling text sort Sort text files split Split a file into pieces sum Print checksum and block counts tac Concatenate and write files in reverse tail Output the last part of files tr Translate, squeeze, and/or delete characters tsort Topological sort unexpand Convert spaces to tabs uniq Uniquify files wc Print newline, word, and byte counts Shell Utilities Name Description arch Print machine hardware name basename Strip directory and suffix from a file name chroot Run a command with a different root directory date Print or set system date and time dirname Strip last file name component du Estimate file space usage echo Print a line of text env Run a command in a modified environment expr Evaluate expressions factor Print prime factors false Do nothing, unsuccessfully groups Print group names a user is in hostid Print numeric host identifier id Print user identity link Make a hard link via the link syscall logname Print current login name nice Run a command with modified niceness nohup Run a command immune to hangups nproc Print the number of available processors pathchk Check file name validity and portability pinky Print information about users printenv Print all or some environment variables printf Format and print data pwd Print working directory readlink Print value of a symlink or canonical file name runcon Run a command in specified SELinux context seq Print numeric sequences sleep Delay for a specified time stat Report file or file system status stdbuf Run a command with modified I/O stream buffering stty Print or change terminal characteristics tee Redirect output to multiple files or processes test Check file types and compare values timeout Run a command with a time limit true Do nothing, successfully tty Print file name of terminal on standard input uname Print system information unlink Remove files via the unlink syscall uptime Print system uptime and load users Print login names of users currently logged in who Print who is currently logged in whoami Print effective user name yes Print a string until interrupted [ Check file types and compare values References GNU Coreutils GNU Coreutils Index GNU Project Homepage Wikipedia: List Of GNU Core Utilities Commands Vikipedia: Coreutils ","title":"GNU Coreutils"}]