[{"content":"There are different types of ethernet cable wiring standards available:\nT568A T568B Straight-through Crossover Rolled/rollover T568A For T568A, the green pair is used for pins 1 and 2 but the orange pair is split to pins 3 and 6, separated by the blue pair.\nSide One Pin Color Side Two Pin Color 1 White-Green 1 White-Green 2 Green 2 Green 3 White-Orange 3 White-Orange 4 Blue 4 Blue 5 White-Blue 5 White-Blue 6 Orange 6 Orange 7 White-Brown 7 White-Brown 8 Brown 8 Brown T568B For T568B, the orange pair is pins 1 and 2 and the green pair is pins 3 and 6, again separated by the blue pair.\nSide One Pin Color Side Two Pin Color 1 White-Orange 1 White-Orange 2 Orange 2 Orange 3 White-Green 3 White-Green 4 Blue 4 Blue 5 White-Blue 5 White-Blue 6 Green 6 Green 7 White-Brown 7 White-Brown 8 Brown 8 Brown Straight-through The straight-through cable is used to connect a host to a switch or hub or a router to a switch or hub.\nFour wires are used in straight-through cable to connect 10/100 Ethernet devices. On a straight through cable, the wired pins match. Notice that only pins 1, 2, 3, and 6 are used. Connect 1 to 1, 2 to 2, 3 to 3, and 6 to 6 and you’ll be up and networking in no time. Just remember that this would be a 10/100 Ethernet-only cable, so it wouldn’t work with 1000 Mbps Ethernet, voice, Token Ring, ISDN, and so on.\nStraight through cable use one wiring standard: both ends use T568A wiring standard or both ends use T568B wiring standard. The following figure shows a straight through cable of which both ends are wired as the T568B standard.\nSide One Pin Color Side Two Pin Color 1 White-Orange 1 White-Orange 2 Orange 2 Orange 3 White-Green 3 White-Green 4 Blue 4 Blue 5 White-Blue 5 White-Blue 6 Green 6 Green 7 White-Brown 7 White-Brown 8 Brown 8 Brown Crossover The same four wires are used in this cable, and just as with the straight-through cable, you simply connect the different pins together. Crossover cables can be used to connect these devices:\nSwitch to switch Hub to hub Host to host Hub to switch Router direct to host A crossover Ethernet cable is a type of Ethernet cable used to connect computing devices together directly. Unlike straight through cable, the RJ45 crossover cable uses two different wiring standards. One end uses the T568A wiring standard, and the other end uses the T568B wiring standard. The internal wiring of Ethernet crossover cables reverses the transmit and receive signals.\nSide One Pin Color Side Two Pin Color 1 White-Orange 1 White-Green 2 Orange 2 Green 3 White-Green 3 White-Orange 4 Blue 4 Blue 5 White-Blue 5 White-Blue 6 Green 6 Orange 7 White-Brown 7 White-Brown 8 Brown 8 Brown Following figure demonstrates how each of the four wires are used in a crossover Ethernet cable.\nRollover Cable Rollover wired cables have opposite Pin assignments on each end of the cable or, in other words, it is \u0026ldquo;rolled over.\u0026rdquo; Pin 1 of Connector A (Side One) would be connected to Pin 8 of Connector B (Side Two). Pin 2 of Connector A (Side One) would be connected to Pin 7 of Connector B (Side Two) and so on. Rollover cables are most commonly used to connect to a device\u0026rsquo;s console port to make programming changes to the device. Unlike crossover and straight-wired cables, rollover cables are not intended to carry data but instead create an interface with the device.\nSide One Pin Color Side Two Pin Color 1 White-Orange 1 Brown 2 Orange 2 White-Brown 3 White-Green 3 Green 4 Blue 4 White-Blue 5 White-Blue 5 Blue 6 Green 6 White-Green 7 White-Brown 7 Orange 8 Brown 8 White-Orange Which cable to choose - Straight Through or Crossover Straight through Ethernet cable can be used, if connecting:\nSwitch to router Switch to PC or server Hub to PC or server Crossover cable can be used, if connecting:\nSwitch to switch Switch to hub Hub to hub Router to router Router Ethernet port to PC NIC PC to PC References Lammle, T., CompTIA Network+ Study Guide 4th Edition, \u0026ldquo;Wiring Standards\u0026rdquo;, chapter 3, page 75 Fluke Networks: Differences Between Wiring Codes T568A vs T568B Difference between Straight-through and crossover cable ComputerCableStore.com - Straight-through, Crossover, and Rollover Wiring ","permalink":"https://tuxxuser.github.io/posts/2024/wiring-standards/","summary":"There are different types of ethernet cable wiring standards available:\nT568A T568B Straight-through Crossover Rolled/rollover T568A For T568A, the green pair is used for pins 1 and 2 but the orange pair is split to pins 3 and 6, separated by the blue pair.\nSide One Pin Color Side Two Pin Color 1 White-Green 1 White-Green 2 Green 2 Green 3 White-Orange 3 White-Orange 4 Blue 4 Blue 5 White-Blue 5 White-Blue 6 Orange 6 Orange 7 White-Brown 7 White-Brown 8 Brown 8 Brown T568B For T568B, the orange pair is pins 1 and 2 and the green pair is pins 3 and 6, again separated by the blue pair.","title":"Ethernet Cable Wiring Standards"},{"content":"Docker Management Commands Command Description docker build -t FRIENDLYNAME . Create image using this directory\u0026rsquo;s Dockerfile docker container run -p 4000:80 FRIENDLYNAME Run \u0026ldquo;friendlyname\u0026rdquo; mapping port 4000 to 80 docker container run -d -p 4000:80 FRIENDLYNAME Same thing, but in detached mode docker container run -ti FRIENDLYNAME Run \u0026ldquo;friendlyname\u0026rdquo; in interactive mode docker container ls List all running containers docker container ls -a List all containers, even those not running docker container exec -it CONTAINER_ID_HASH bash Interacts with container and executes bash docker container stop CONTAINER_ID_HASH Gracefully stop the specified container docker container kill CONTAINER_ID_HASH Force shutdown of the specified container docker container rm CONTAINER_ID_HASH Remove specified container from this machine docker container prune Remove all stopped containers docker volume create VOLUME-NAME Creates a named volume with the default driver docker volume inspect VOLUME-NAME Prints out details about the given volume entity docker volume rm VOLUME-NAME Removes the given volume from the system docker image ls -a List all images on this machine docker image rm IMAGE-ID Remove specified image from this machine docker image prune Remove all \u0026lsquo;dangling\u0026rsquo; images from this machine docker image prune -a Remove all images without at least one container associated to them docker system prune Delete all unused data; containers, volumes and images w.o. containers docker system df -v Presents a summary of the space used by different docker objects docker login Log in this CLI session using your Docker credentials docker tag \u0026lt;image\u0026gt; username/repository:tag Tag for upload to registry docker push username/repository:tag Upload tagged image to registry docker run username/repository:tag Run image from a registry Ctrl + P, Ctrl + Q Detach from container you\u0026rsquo;re in, but keep it running Ctrl + D Detach from container you\u0026rsquo;re in, and stop it, same as exit References Docker Reference Documentation ","permalink":"https://tuxxuser.github.io/posts/2024/docker-management-cmd/","summary":"Docker Management Commands Command Description docker build -t FRIENDLYNAME . Create image using this directory\u0026rsquo;s Dockerfile docker container run -p 4000:80 FRIENDLYNAME Run \u0026ldquo;friendlyname\u0026rdquo; mapping port 4000 to 80 docker container run -d -p 4000:80 FRIENDLYNAME Same thing, but in detached mode docker container run -ti FRIENDLYNAME Run \u0026ldquo;friendlyname\u0026rdquo; in interactive mode docker container ls List all running containers docker container ls -a List all containers, even those not running docker container exec -it CONTAINER_ID_HASH bash Interacts with container and executes bash docker container stop CONTAINER_ID_HASH Gracefully stop the specified container docker container kill CONTAINER_ID_HASH Force shutdown of the specified container docker container rm CONTAINER_ID_HASH Remove specified container from this machine docker container prune Remove all stopped containers docker volume create VOLUME-NAME Creates a named volume with the default driver docker volume inspect VOLUME-NAME Prints out details about the given volume entity docker volume rm VOLUME-NAME Removes the given volume from the system docker image ls -a List all images on this machine docker image rm IMAGE-ID Remove specified image from this machine docker image prune Remove all \u0026lsquo;dangling\u0026rsquo; images from this machine docker image prune -a Remove all images without at least one container associated to them docker system prune Delete all unused data; containers, volumes and images w.","title":"Docker Management Commands"},{"content":"This guide provides basic steps, on how to create a virtual machine for Windows 11 in Proxmox.\nMicrosoft Windows 11 hardware requirements To install or upgrade to Windows 11, devices must meet the following minimum hardware requirements:\nComponent Description Processor 1 GHz or faster with 2 and more cores, 64-bit Memory 4 GB or greater Storage 64 GB or more Graphics card Compatible with DirectX or later, with WDDM 2.0 driver System firmware UEFI, Secure Boot capable TPM Trusted Platform Module (TPM) version 2.0 Display High definition (720p) display, 9\u0026quot; or greater, 8 bits per color channel Internet connection Used to perform updates, and to download and use some features Creating virtual machine Start VM creation wizard Log on to the Proxmox server, select node (e.g. proxmox) and press Create VM. Alternatively, you can right-click on the Proxmox node and select Create VM\nGeneral On the General tab, select and provide the following information:\nSetting name Description Node Select proxmox node where VM is created (e.g. proxmox) VM ID Value is populated automatically and can be changed Name Provide VM name, e.g. Win11-x64-enUS Resource Pool Select resource pool, available on your proxmox (e.g. Production) OS Select Use CD/DVD disc image file (iso) Setting name Description Storage This is name of the repository, where installation ISO images are stored ISO image Name of the ISO image Under Guest OS set the following settings: Setting name Description Type Select OS type - Microsoft Windows Version Select OS version - 11/2022/2025 Activate the option Add additional drive for VirtIO drivers. This option will add a drive for VirtIO drivers. Setting name Description Storage This is name of the repository, where VirtIO driver ISO is located ISO image VirtIO driver ISO name VirtIO driver ISO can be downloaded:\nStable Latest Disks Select Disk and use the following settings:\nSetting name Description Bus/Device Select storage device - in this example VirtIO Block Storage Location where virtual storage device is created Disk size (GB) Virtual disk size. For Windows 11, we can set minimum size of 64 GB CPU Under CPU tab select CPU Type and the amount of CPU Cores.\nIn this example, we set CPU Type = host and number of CPU Cores = 4\nMemory Set the amount of memory (RAM) for the guest OS. For Windows, we set 8 GB (8192 MB).\nNetwork Under the Network tab Bridge, select the network adapter and also select Model (in this example VirtIO (paravirtualized))\nConfirm Finally, confirm (press Finish) all settings to create a virtual machine.\nReferences Microsoft Windows 11 requirements Windows VirtIO Drivers ","permalink":"https://tuxxuser.github.io/posts/2024/proxmox-create-win11vm/","summary":"This guide provides basic steps, on how to create a virtual machine for Windows 11 in Proxmox.\nMicrosoft Windows 11 hardware requirements To install or upgrade to Windows 11, devices must meet the following minimum hardware requirements:\nComponent Description Processor 1 GHz or faster with 2 and more cores, 64-bit Memory 4 GB or greater Storage 64 GB or more Graphics card Compatible with DirectX or later, with WDDM 2.0 driver System firmware UEFI, Secure Boot capable TPM Trusted Platform Module (TPM) version 2.","title":"Create Windows 11 Virtual Machine in Proxmox"},{"content":"Core utilities (often called \u0026ldquo;coreutils\u0026rdquo;) are the basic, fundamental command-line tools of a GNU/Linux system. These utilities provide basic file, shell, and text manipulation operations. The core utilities are part of the GNU Project and are used in most Linux distributions.\nList of GNU Core Utilities commands Following is a list of commands from the GNU Core Utilities for Unix (and Unix-like) operating systems.\nFile Utilities Name Description chcon Changes (SELinux) file security context chgrp Change group ownership chown Change file owner and group chmod Change (file) access permissions cp Copy files and directories dd Convert and copy a file df Report file system space usage dir Briefly list directory contents (equivalent to ls -C -b) dircolors Color setup for ls install Copy files and set attributes ln Make links between files ls List directory contents mkdir Make directories mkfifo Make FIFOs (named pipes) mknod Make block or character special files mktemp Create temporary file or directory mv Move (rename) files realpath Print the resolved file name rm Remove files or directories rmdir Remove empty directories shred Remove files more securely sync Flushes file system buffers touch Change file timestamps truncate Shrink or extend the size of a file vdir Verbosely list directory contents (equivalent to ls -C -b) Text Utilities Name Description b2sum Print or check BLAKE2 digests base32 Encodes or decodes Base32, and prints result to stdout base64 Encodes or decodes Base64, and prints result to stdout cat Concatenate and write files cksum Print and verify file checksums comm Compare two sorted files line by line csplit Split a file into context-determined pieces\tp cut Print selected parts of lines expand Convert tabs to spaces fmt Reformat paragraph text fold Wrap input lines to fit in specified width head Output the first part of files join Join lines on a common field md5sum Print or check MD5 digests nl Number lines and write files numfmt Reformat numbers od Write files in octal or other formats paste Merge lines of files ptx Produces a permuted index of file contents pr Paginate or columnate files for printing sha1sum Print or check SHA-1 digests (length = 160 bits) sha224sum Print or check SHA-2 digests (length = 224 bits) sha256sum Print or check SHA-2 digests (length = 256 bits) sha384sum Print or check SHA-2 digests (length = 384 bits) sha512sum Print or check SHA-2 digests (length = 512 bits) shuf Shuffling text sort Sort text files split Split a file into pieces sum Print checksum and block counts tac Concatenate and write files in reverse tail Output the last part of files tr Translate, squeeze, and/or delete characters tsort Topological sort unexpand Convert spaces to tabs uniq Uniquify files wc Print newline, word, and byte counts Shell Utilities Name Description arch Print machine hardware name basename Strip directory and suffix from a file name chroot Run a command with a different root directory date Print or set system date and time dirname Strip last file name component du Estimate file space usage echo Print a line of text env Run a command in a modified environment expr Evaluate expressions factor Print prime factors false Do nothing, unsuccessfully groups Print group names a user is in hostid Print numeric host identifier id Print user identity link Make a hard link via the link syscall logname Print current login name nice Run a command with modified niceness nohup Run a command immune to hangups nproc Print the number of available processors pathchk Check file name validity and portability pinky Print information about users printenv Print all or some environment variables printf Format and print data pwd Print working directory readlink Print value of a symlink or canonical file name runcon Run a command in specified SELinux context seq Print numeric sequences sleep Delay for a specified time stat Report file or file system status stdbuf Run a command with modified I/O stream buffering stty Print or change terminal characteristics tee Redirect output to multiple files or processes test Check file types and compare values timeout Run a command with a time limit true Do nothing, successfully tty Print file name of terminal on standard input uname Print system information unlink Remove files via the unlink syscall uptime Print system uptime and load users Print login names of users currently logged in who Print who is currently logged in whoami Print effective user name yes Print a string until interrupted [ Check file types and compare values References GNU Coreutils GNU Coreutils Index GNU Project Homepage Wikipedia: List Of GNU Core Utilities Commands Vikipedia: Coreutils ","permalink":"https://tuxxuser.github.io/posts/2024/gnu-coreutils/","summary":"Core utilities (often called \u0026ldquo;coreutils\u0026rdquo;) are the basic, fundamental command-line tools of a GNU/Linux system. These utilities provide basic file, shell, and text manipulation operations. The core utilities are part of the GNU Project and are used in most Linux distributions.\nList of GNU Core Utilities commands Following is a list of commands from the GNU Core Utilities for Unix (and Unix-like) operating systems.\nFile Utilities Name Description chcon Changes (SELinux) file security context chgrp Change group ownership chown Change file owner and group chmod Change (file) access permissions cp Copy files and directories dd Convert and copy a file df Report file system space usage dir Briefly list directory contents (equivalent to ls -C -b) dircolors Color setup for ls install Copy files and set attributes ln Make links between files ls List directory contents mkdir Make directories mkfifo Make FIFOs (named pipes) mknod Make block or character special files mktemp Create temporary file or directory mv Move (rename) files realpath Print the resolved file name rm Remove files or directories rmdir Remove empty directories shred Remove files more securely sync Flushes file system buffers touch Change file timestamps truncate Shrink or extend the size of a file vdir Verbosely list directory contents (equivalent to ls -C -b) Text Utilities Name Description b2sum Print or check BLAKE2 digests base32 Encodes or decodes Base32, and prints result to stdout base64 Encodes or decodes Base64, and prints result to stdout cat Concatenate and write files cksum Print and verify file checksums comm Compare two sorted files line by line csplit Split a file into context-determined pieces\tp cut Print selected parts of lines expand Convert tabs to spaces fmt Reformat paragraph text fold Wrap input lines to fit in specified width head Output the first part of files join Join lines on a common field md5sum Print or check MD5 digests nl Number lines and write files numfmt Reformat numbers od Write files in octal or other formats paste Merge lines of files ptx Produces a permuted index of file contents pr Paginate or columnate files for printing sha1sum Print or check SHA-1 digests (length = 160 bits) sha224sum Print or check SHA-2 digests (length = 224 bits) sha256sum Print or check SHA-2 digests (length = 256 bits) sha384sum Print or check SHA-2 digests (length = 384 bits) sha512sum Print or check SHA-2 digests (length = 512 bits) shuf Shuffling text sort Sort text files split Split a file into pieces sum Print checksum and block counts tac Concatenate and write files in reverse tail Output the last part of files tr Translate, squeeze, and/or delete characters tsort Topological sort unexpand Convert spaces to tabs uniq Uniquify files wc Print newline, word, and byte counts Shell Utilities Name Description arch Print machine hardware name basename Strip directory and suffix from a file name chroot Run a command with a different root directory date Print or set system date and time dirname Strip last file name component du Estimate file space usage echo Print a line of text env Run a command in a modified environment expr Evaluate expressions factor Print prime factors false Do nothing, unsuccessfully groups Print group names a user is in hostid Print numeric host identifier id Print user identity link Make a hard link via the link syscall logname Print current login name nice Run a command with modified niceness nohup Run a command immune to hangups nproc Print the number of available processors pathchk Check file name validity and portability pinky Print information about users printenv Print all or some environment variables printf Format and print data pwd Print working directory readlink Print value of a symlink or canonical file name runcon Run a command in specified SELinux context seq Print numeric sequences sleep Delay for a specified time stat Report file or file system status stdbuf Run a command with modified I/O stream buffering stty Print or change terminal characteristics tee Redirect output to multiple files or processes test Check file types and compare values timeout Run a command with a time limit true Do nothing, successfully tty Print file name of terminal on standard input uname Print system information unlink Remove files via the unlink syscall uptime Print system uptime and load users Print login names of users currently logged in who Print who is currently logged in whoami Print effective user name yes Print a string until interrupted [ Check file types and compare values References GNU Coreutils GNU Coreutils Index GNU Project Homepage Wikipedia: List Of GNU Core Utilities Commands Vikipedia: Coreutils ","title":"GNU Coreutils"}]